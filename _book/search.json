[{"path":"index.html","id":"preface","chapter":"1 Preface","heading":"1 Preface","text":"","code":""},{"path":"index.html","id":"introduction","chapter":"1 Preface","heading":"1.1 Introduction","text":"bookdown project “Learning Data Science R” function personal notebook learning data science R.Judging knowledge state personally, believe currently (December 2021) intermediate level R. -status working knowledge (beginner expert) precisely reason started notebook. difficult advance intermediate level self-determined learner.Reading newly published books data science effective wish. Much material already know, look hidden gems knowledge new . importantly, books incorporate modern trend interested : Using tidyverse tidymodels approach data wrangling, data analysis, data modeling.Furthermore statistical knowledge poor. historical reason distrust NHST (Null Hypothesis Significance Test) time didn’t even know notion related issues like p-hacking. Therefore also interested learn differences frequentist Bayesian approaches.now, written personal notes ran code examples accompanying specific books. last weeks, turned approach practical. exposed new material many different sources (books, blogs, vignettes packages, etc.), want jot reflections experiment code snippets. Therefore thought general (meta) notebook help advance effectively.","code":""},{"path":"online-science-class-data.html","id":"online-science-class-data","chapter":"2 Online Science Class Data","heading":"2 Online Science Class Data","text":"","code":""},{"path":"online-science-class-data.html","id":"introduction-1","chapter":"2 Online Science Class Data","heading":"2.1 Introduction","text":"Notes chapter references chapter 7 (Walkthrough 1: Education Data Science Pipeline Online Science Class Data) Data Science Education Using R.chapter focuses processing data prepare information data analysis. finish chapter also analysis (regression model), main point walkthrough data wrangling. following list presents functions learning something new:apply function across multiple columns using across(), explaining {purrr} style formulas, procedures convert old (mutate)_if, _at, connection helper function {tidyselect}create columns scale values reversing scales using case_when() ({dplyr})convert wide long format using pivot_longer() {tidyr}separate data one column different columns using separate() ({tidyr})join dataset using different kinds mutating joins {dplyr} (left_join(), semi_join(), anti_join(), right_join())select distinct/unique rows using distinct() ({dplyr})generate table output tab_model() {sjPlot} packagesave tables Word format using functions {apaTables} package","code":""},{"path":"online-science-class-data.html","id":"setup","chapter":"2 Online Science Class Data","heading":"2.2 Setup","text":"Load packages used chapter.","code":"\n# Data Science in Education\n# Packages for Walkthrough 1 \n\nlibrary(tidyverse)\n#> ── Attaching packages ────────────────────────────────── tidyverse 1.3.1 ──\n#> ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n#> ✓ tibble  3.1.6     ✓ dplyr   1.0.7\n#> ✓ tidyr   1.1.4     ✓ stringr 1.4.0\n#> ✓ readr   2.1.1     ✓ forcats 0.5.1\n#> ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\nlibrary(apaTables)\nlibrary(sjPlot)\nlibrary(readxl)\nlibrary(dataedu)"},{"path":"online-science-class-data.html","id":"process-survey","chapter":"2 Online Science Class Data","heading":"2.3 Process Survey","text":"","code":""},{"path":"online-science-class-data.html","id":"inspect-data","chapter":"2 Online Science Class Data","heading":"2.3.1 Inspect Data","text":"data source self-report survey. Data collected\nstart course. survey included ten items, \ncorresponding one three motivation measures: interest, utility\nvalue, perceived competence. measure concept try \nmake concrete assess using survey questions. three motivation\nmeasures explore come Expectancy-Value Theory, states\nstudents motivated learn believe \ncan achieve something (expectancy, also known “perceived competence”)\nbelieve concept trying learn important\n(value) (Wigfield & Eccles,\n2000).multiple types value, explore two :\ninterest utility value. Utility value degree \nperson able connect concept learned something \nutilize future life. survey included following\nten items:think course interesting subject. (Interest)learning class relevant life. (Utility\nvalue)consider topic one best subjects. (Perceived\ncompetence)interested course. (Interest—reverse coded)think like learning topic. (Interest)think studying course useful \nknow. (Utility value)don’t feel comfortable comes answering questions \narea. (Perceived competence–reverse coded)think subject interesting. (Interest)find content course personally meaningful.\n(Utility value)’ve always wanted learn subject. (Interest)process self-report items three scales forinterest,perceived competence, andutility value.:Renaming question variables something manageableReversing response scales questions 4 7Categorizing question measureComputing mean measure","code":"\n# Pre-survey for the F15 and S16 semesters\npre_survey <- dataedu::pre_survey\nglimpse(pre_survey)\n#> Rows: 1,102\n#> Columns: 12\n#> $ opdata_username      <chr> \"_80624_1\", \"_80623_1\", \"_82588_1\", \"_80623_…\n#> $ opdata_CourseID      <chr> \"FrScA-S116-01\", \"BioA-S116-01\", \"OcnA-S116-…\n#> $ Q1MaincellgroupRow1  <dbl> 4, 4, NA, 4, NA, 4, NA, 5, NA, 4, 4, 5, 4, 3…\n#> $ Q1MaincellgroupRow2  <dbl> 4, 4, NA, 3, NA, 2, NA, 3, NA, 4, 4, 4, 4, 2…\n#> $ Q1MaincellgroupRow3  <dbl> 4, 3, NA, 3, NA, 2, NA, 3, NA, 3, 3, 3, 3, 2…\n#> $ Q1MaincellgroupRow4  <dbl> 1, 2, NA, 2, NA, 2, NA, 1, NA, 2, 1, 1, 1, 3…\n#> $ Q1MaincellgroupRow5  <dbl> 5, 4, NA, 3, NA, 4, NA, 5, NA, 4, 5, 5, 4, 4…\n#> $ Q1MaincellgroupRow6  <dbl> 4, 4, NA, 3, NA, 4, NA, 4, NA, 4, 5, 5, 4, 3…\n#> $ Q1MaincellgroupRow7  <dbl> 1, 2, NA, 3, NA, 1, NA, 1, NA, 2, 2, 1, 1, 3…\n#> $ Q1MaincellgroupRow8  <dbl> 5, 3, NA, 4, NA, 4, NA, 5, NA, 4, 4, 5, 4, 4…\n#> $ Q1MaincellgroupRow9  <dbl> 5, 4, NA, 2, NA, 4, NA, 3, NA, 3, 3, 4, 3, 3…\n#> $ Q1MaincellgroupRow10 <dbl> 5, 2, NA, 4, NA, 4, NA, 4, NA, 3, 5, 4, 4, 3…\nview(pre_survey)"},{"path":"online-science-class-data.html","id":"rename-variables","chapter":"2 Online Science Class Data","heading":"2.3.2 Rename variables","text":"last line code chunk special interest . book used mutate_at(vars(q1:q10), list( ~ .numeric(.))), problematic two reasons:mutate_at “superseded use across()” (help file). also means vars function also outdated needed scoped verbs (_if, _at, _all).list( ~ .numeric(.)) pretty cryptic, especially beginners. ~ (tilde) . (dot) line mean?","code":"\npre_survey  <-\n  pre_survey  %>%\n  # Rename the questions something easier to work with \n  # because R is case sensitive\n  # and working with variable names in mix case is prone to error\n  rename(\n    q1 = Q1MaincellgroupRow1,\n    q2 = Q1MaincellgroupRow2,\n    q3 = Q1MaincellgroupRow3,\n    q4 = Q1MaincellgroupRow4,\n    q5 = Q1MaincellgroupRow5,\n    q6 = Q1MaincellgroupRow6,\n    q7 = Q1MaincellgroupRow7,\n    q8 = Q1MaincellgroupRow8,\n    q9 = Q1MaincellgroupRow9,\n    q10 = Q1MaincellgroupRow10\n  ) %>%\n  \n  ## CONVERT ALL QUESTION RESPONSES TO NUMERIC \n  \n  ## a) The code line of the book\n  ## ~ (tilde) is an alternative for an anonymous function\n  ## . (dot) represents the (selected) columns\n  # mutate_at(vars(q1:q10), list( ~ as.numeric(.))) ## WORKS!\n  \n  \n  ## Above line could be written without abbreviations\n  ## for more information see section on \"Purr style formula\"\n  #  mutate_at(vars(q1:q10), list( function(x) as.numeric(x))) ## WORKS!\n  \n  ## b) mutate_at is # superseded by the use of across() in an existing verb\n  ## there are different options to apply across() using different selectors\n\n  ## b1)\n  # mutate(across(num_range(prefix = \"q\", range = 1:10)), list( ~ as.numeric(.))) ## WORKS!\n\n  ## b2)\n  # mutate(across(starts_with(\"q\"), list( ~ as.numeric(.)))) ## WORKS!\n\n  ## b3)\n  ## mutate(across(q1:q10, list( ~ as.numeric(.)))) ## WORKS!\n\n  ## c) as across applies only to selected columns \n  ## it is not necessary to list all data frame columns\n  ## instead of using the above formula coding style\n  ## one could write the much simpler code line\n\n  mutate(across(q1:q10, as.numeric)) ## WORKS!\n\n  ## d) this means that even the original book line could be simplified\n     # mutate_at(vars(q1:q10), as.numeric) ## WORKS!"},{"path":"online-science-class-data.html","id":"introducing-across","chapter":"2 Online Science Class Data","heading":"2.3.2.1 Introducing across()","text":"column-wise operations vignette states header “Basic usage” two primary arguments:first argument, .cols, selects columns want operate . uses tidy selection (like select()) can pick variables position, name, type.second argument, .fns, function list functions apply column. can also purrr style formula (list formulas) like ~ .x / 2.explanation needs understanding otherwise creates just questions:tidy selection?purrr style formula?","code":""},{"path":"online-science-class-data.html","id":"tidy-selection","chapter":"2 Online Science Class Data","heading":"2.3.2.1.1 Tidy selection","text":"Tidy selection kind mini language R dialect provide functions select variables based names properties. selection language reference provides list modifiers selection helpers. important know types arguments work selection context, e.g. functions like dplyr::select() tidyr::pivot_longer(). Using selection helper anywhere else results error message: “Error:  must used within selecting function. See https://tidyselect.r-lib.org/reference/faq-selection-context.html.”example error message:Error: starts_with() must used within selecting function.\nℹ See https://tidyselect.r-lib.org/reference/faq-selection-context.html.\nRun rlang::last_error() see error occurred.","code":"\nstarts_with(\"q\")"},{"path":"online-science-class-data.html","id":"purrr-style-formula","chapter":"2 Online Science Class Data","heading":"2.3.2.1.2 Purrr style formula","text":"Purrr program package tidyverse containing tools functional programming. one important feature includes series map-functions iterations (loops). Another characteristic can use vectors, functions formulae. tell R using formula (variable) use tilde symbol ~. three ways refer arguments, allowing create compact anonymous functions.single argument function, use .two argument function, use .x .yFor arguments, use ..1, ..2, ..3 etc.book example tilde used anonymous function. ca seen replace book code list( ~ .numeric(.)) list( function(x) .numeric(x)). works well code spelled . (list() function necessary columns dataframe returned list.)","code":""},{"path":"online-science-class-data.html","id":"advantages-of-across","chapter":"2 Online Science Class Data","heading":"2.3.2.2 Advantages of across()","text":"column-wise operations vignette mentions four advantages across():across() applies function (functions) across multiple columns.across() reduces number functions dplyr needs provide.across() unifies _if _at semantics can select position, name, type one line.across() doesn’t need use vars().","code":""},{"path":"online-science-class-data.html","id":"convert-old-code","chapter":"2 Online Science Class Data","heading":"2.3.2.3 Convert old code","text":"column-wise operations vignette also gives hints convert old code. boils three rules:Strip _if(), _at() _all() suffix function. examle: Instead mutate_at(vars(q1:q10), list( ~ .numeric(.))) stripping _at got code line mutate(vars(q1:q10), list( ~ .numeric(.))).Call across(). first argument :_if(), old second argument wrapped ()._at(), old second argument, call vars() removed._all(), everything().\ncase change mutate(vars(q1:q10), list( ~ .numeric(.))) two fold: Inserting across() call deleting vars() part. steps fulfilled replacing vars across get: mutate(across(q1:q10), list( ~ .numeric(.))))Additionally simplify second part code line. Instead using complex formula notation can write mutate(across(q1:q10), .numeric)planning write PR GitHub repo withseveral typos propose tochange mutate_at() across():code, one must also change explaining book text!","code":""},{"path":"online-science-class-data.html","id":"reverse-scale","chapter":"2 Online Science Class Data","heading":"2.3.3 Reverse scale","text":"scale survey responses questions 4 7 must reversed responses questions can interpreted way. common problem writing function pays effort.case_when() function useful vectorises multiple if_else() statements. argument sequence two-sided formula. left hand side (LHS) determines values match case must evaluate logical vector return either TRUE FALSE. right hand side (RHS) provides replacement value.interesting exercise write general function:\n- working likert scales 5 7 levels\n- working likert scales “forced option,” neutral option removed. (See Wikipedia Likert scales)","code":"\n# This part of the code is where we write the function:\n# Function for reversing scales \nreverse_scale <- function(question) {\n  # Reverses the response scales for consistency\n  #   Arguments:\n  #     question - survey question\n  #   Returns: \n  #    a numeric converted response\n  # Note: even though 3 is not transformed, case_when expects a match for all\n  # possible conditions, so it's best practice to label each possible input\n  # and use TRUE ~ as the final statement returning NA for unexpected inputs\n  x <- case_when(\n    question == 1 ~ 5,\n    question == 2 ~ 4,\n    question == 3 ~ 3, \n    question == 4 ~ 2,\n    question == 5 ~ 1,\n    TRUE ~ NA_real_\n  )\n  x\n}\n\n# And here's where we use that function to reverse the scales\n# We use the pipe operator %>% here\n# Reverse scale for questions 4 and 7\npre_survey <-\n  pre_survey %>%\n  mutate(q4 = reverse_scale(q4),\n         q7 = reverse_scale(q7))"},{"path":"online-science-class-data.html","id":"from-wide-to-long-format","chapter":"2 Online Science Class Data","heading":"2.3.4 From wide to long format","text":"calculate — also visualizations — need answers person one column. means transform pre_survey dataset wide format long format. Instead 1,102 observations 12 variables, get 11,020 observations 4 variables.Collecting questions answers respective headings need invent two names new columns. Appropriate names variables question response.add future new variables dataset create new object measure mean.","code":"\n# Pivot the dataset from wide to long format\nmeasure_mean <-\n  pre_survey %>%\n  # Gather questions and responses\n  pivot_longer(cols = q1:q10,\n               names_to = \"question\",\n               values_to = \"response\")\n\nmeasure_mean\n#> # A tibble: 11,020 × 4\n#>    opdata_username opdata_CourseID question response\n#>    <chr>           <chr>           <chr>       <dbl>\n#>  1 _80624_1        FrScA-S116-01   q1              4\n#>  2 _80624_1        FrScA-S116-01   q2              4\n#>  3 _80624_1        FrScA-S116-01   q3              4\n#>  4 _80624_1        FrScA-S116-01   q4              5\n#>  5 _80624_1        FrScA-S116-01   q5              5\n#>  6 _80624_1        FrScA-S116-01   q6              4\n#>  7 _80624_1        FrScA-S116-01   q7              5\n#>  8 _80624_1        FrScA-S116-01   q8              5\n#>  9 _80624_1        FrScA-S116-01   q9              5\n#> 10 _80624_1        FrScA-S116-01   q10             5\n#> # … with 11,010 more rows"},{"path":"online-science-class-data.html","id":"create-measure-column","chapter":"2 Online Science Class Data","heading":"2.3.5 Create measure column","text":"Next, ’ll take new measure_mean dataset create column called measure. ’ll fill column one three question categories:int: interestuv: utility valuepc: perceived competenceWe use case_when() function. ended one variable containing possible question numbers (q1, q2, etc.). supply case_when() list question numbers correspond category: interest, utility value, perceived competence.interest: code , tell R use questions 1, 4, 5, 8, 10 create category int.utility value: tell R use questions 2, 6, 9 calculate uv.perceived competence: use remaining questions 3 7 calculate pc.collect values vector use function c() “combine.”’ll introduce new operator order : %!%. Practically, operator means R look within list something.","code":"\n# Add measure variable \nmeasure_mean_1 <- measure_mean %>% \n  # Here's where we make the column of question categories called \"measure\"\n  mutate(\n    measure = case_when(\n      question %in% c(\"q1\", \"q4\", \"q5\", \"q8\", \"q10\") ~ \"int\",\n      question %in% c(\"q2\", \"q6\", \"q9\") ~ \"uv\",\n      question %in% c(\"q3\", \"q7\") ~ \"pc\",\n      TRUE ~ NA_character_)\n  )\n\nmeasure_mean_1\n#> # A tibble: 11,020 × 5\n#>    opdata_username opdata_CourseID question response measure\n#>    <chr>           <chr>           <chr>       <dbl> <chr>  \n#>  1 _80624_1        FrScA-S116-01   q1              4 int    \n#>  2 _80624_1        FrScA-S116-01   q2              4 uv     \n#>  3 _80624_1        FrScA-S116-01   q3              4 pc     \n#>  4 _80624_1        FrScA-S116-01   q4              5 int    \n#>  5 _80624_1        FrScA-S116-01   q5              5 int    \n#>  6 _80624_1        FrScA-S116-01   q6              4 uv     \n#>  7 _80624_1        FrScA-S116-01   q7              5 pc     \n#>  8 _80624_1        FrScA-S116-01   q8              5 int    \n#>  9 _80624_1        FrScA-S116-01   q9              5 uv     \n#> 10 _80624_1        FrScA-S116-01   q10             5 int    \n#> # … with 11,010 more rows"},{"path":"online-science-class-data.html","id":"add-measure-variable","chapter":"2 Online Science Class Data","heading":"2.3.6 Add measure variable","text":"Finally create new variable called mean_response holds means three categories int, uv, pc. Since calculating mean category, need first group responses together using function called group_by(). function takes data frame (tibble) converts grouped tbl operations performed “group.”want go back original tibble, use ungroup() remove grouping.Next, ’ll use function summarize() create two new variables: mean_response percent_NA.summarize() (summarise()) creates new data frame. one () rows combination grouping variables; grouping variables, output single row summarizing observations input. contain one column grouping variable one column summary statistics specified.’ll find mean response category using mean() function. important calculate value without empty values (NA available values). argument na.rm = TRUE R calculates mean removing NA values. (na.rm stands “remove NAs”).detect cell column contains NA’s one use function .na(). test like response == NA response == \"NA\" work!","code":"\n# Add measure variable \nmeasure_mean_2 <- measure_mean_1 %>%\n  # First, we group by the new variable \"measure\"\n  group_by(measure) %>%\n  # Here's where we compute the mean of the responses\n  summarize(\n    # Creating a new variable to indicate the mean response for each measure\n    mean_response = mean(response, na.rm = TRUE),\n    # Creating a new variable to indicate the percent of each measure that \n    # had NAs in the response field\n    percent_NA = mean(is.na(response))\n    )\n\nmeasure_mean_2\n#> # A tibble: 3 × 3\n#>   measure mean_response percent_NA\n#>   <chr>           <dbl>      <dbl>\n#> 1 int              4.25      0.178\n#> 2 pc               3.65      0.178\n#> 3 uv               3.74      0.178"},{"path":"online-science-class-data.html","id":"process-course-cata","chapter":"2 Online Science Class Data","heading":"2.4 Process course cata","text":"","code":""},{"path":"online-science-class-data.html","id":"inspect-data-1","chapter":"2 Online Science Class Data","heading":"2.4.1 Inspect data","text":"many gradebook items per course student generated learning management system.column CourseSectionOrigID combines information course subject, semester, section. tidy format variable column. every different type information hat column can use efficiently data.","code":"\n# Gradebook and log-trace data for F15 and S16 semesters\ncourse_data <- dataedu::course_data\n\nglimpse(course_data)\n#> Rows: 29,711\n#> Columns: 8\n#> $ CourseSectionOrigID <chr> \"AnPhA-S116-01\", \"AnPhA-S116-01\", \"AnPhA-S116…\n#> $ Bb_UserPK           <dbl> 60186, 60186, 60186, 60186, 60186, 60186, 601…\n#> $ Gradebook_Item      <chr> \"POINTS EARNED & TOTAL COURSE POINTS\", \"WORK …\n#> $ Grade_Category      <chr> NA, NA, NA, \"Hw\", \"Hw\", \"Qz\", \"Qz\", \"Hw\", \"Hw…\n#> $ FinalGradeCEMS      <dbl> 86.272, 86.272, 86.272, 86.272, 86.272, 86.27…\n#> $ Points_Possible     <dbl> 5, 30, 105, 140, 5, 5, 20, 50, 10, 50, 5, 5, …\n#> $ Points_Earned       <dbl> 4.050, 24.000, 71.675, 140.970, 5.000, 4.000,…\n#> $ Gender              <chr> \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"F\", \"F\", …"},{"path":"online-science-class-data.html","id":"separate-data","chapter":"2 Online Science Class Data","heading":"2.4.2 Separate data","text":"therefore separate kinds information using function separate(). , load course_data run separate() function split subject, semester, section can use later . keep reference original column.","code":"\n# split course section into components\ncourse_data <- \n  course_data %>%\n  # Give course subject, semester, and section their own columns\n  separate(\n    col = CourseSectionOrigID,\n    into = c(\"subject\", \"semester\", \"section\"),\n    sep = \"-\",\n    remove = FALSE\n  )"},{"path":"online-science-class-data.html","id":"join-data","chapter":"2 Online Science Class Data","heading":"2.4.3 Join data","text":"pre_survey course_data datasets referring courses. Opdata_courseID (pre_survey dataset) CourseSectionOrigID (course_data dataset) identifiers. join datasets need column name values (keys) tibbles. Instead rename just one columns take occasion clean name . One variable correspond course, correspond student.","code":""},{"path":"online-science-class-data.html","id":"create-keys","chapter":"2 Online Science Class Data","heading":"2.4.3.1 Create keys","text":"rename opdata_username opdata_CourseID student_id course_id, respectively. (book text mentioned RespondentID wrong column name. code correct.)","code":"\npre_survey <-\n  pre_survey %>%\n  rename(student_id = opdata_username,\n         course_id = opdata_CourseID)\n\npre_survey\n#> # A tibble: 1,102 × 12\n#>    student_id course_id        q1    q2    q3    q4    q5    q6    q7    q8\n#>    <chr>      <chr>         <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n#>  1 _80624_1   FrScA-S116-01     4     4     4     5     5     4     5     5\n#>  2 _80623_1   BioA-S116-01      4     4     3     4     4     4     4     3\n#>  3 _82588_1   OcnA-S116-03     NA    NA    NA    NA    NA    NA    NA    NA\n#>  4 _80623_1   AnPhA-S116-01     4     3     3     4     3     3     3     4\n#>  5 _80624_1   AnPhA-S116-01    NA    NA    NA    NA    NA    NA    NA    NA\n#>  6 _80624_1   AnPhA-S116-02     4     2     2     4     4     4     5     4\n#>  7 _80624_1   AnPhA-T116-01    NA    NA    NA    NA    NA    NA    NA    NA\n#>  8 _80624_1   BioA-S116-01      5     3     3     5     5     4     5     5\n#>  9 _80624_1   BioA-T116-01     NA    NA    NA    NA    NA    NA    NA    NA\n#> 10 _80624_1   PhysA-S116-01     4     4     3     4     4     4     4     4\n#> # … with 1,092 more rows, and 2 more variables: q9 <dbl>, q10 <dbl>\ncourse_data <-\n  course_data %>%\n  rename(student_id = Bb_UserPK,\n         course_id = CourseSectionOrigID)\n\ncourse_data\n#> # A tibble: 29,711 × 11\n#>    course_id     subject semester section student_id Gradebook_Item        \n#>    <chr>         <chr>   <chr>    <chr>        <dbl> <chr>                 \n#>  1 AnPhA-S116-01 AnPhA   S116     01           60186 POINTS EARNED & TOTAL…\n#>  2 AnPhA-S116-01 AnPhA   S116     01           60186 WORK ATTEMPTED        \n#>  3 AnPhA-S116-01 AnPhA   S116     01           60186 0.1: Message Your Ins…\n#>  4 AnPhA-S116-01 AnPhA   S116     01           60186 0.2: Intro Assignment…\n#>  5 AnPhA-S116-01 AnPhA   S116     01           60186 0.3: Intro Assignment…\n#>  6 AnPhA-S116-01 AnPhA   S116     01           60186 1.1: Quiz             \n#>  7 AnPhA-S116-01 AnPhA   S116     01           60186 1.2: Quiz             \n#>  8 AnPhA-S116-01 AnPhA   S116     01           60186 1.3: Create a Living …\n#>  9 AnPhA-S116-01 AnPhA   S116     01           60186 1.3: Create a Living …\n#> 10 AnPhA-S116-01 AnPhA   S116     01           60186 1.4: Negative Feedbac…\n#> # … with 29,701 more rows, and 5 more variables: Grade_Category <chr>,\n#> #   FinalGradeCEMS <dbl>, Points_Possible <dbl>, Points_Earned <dbl>,\n#> #   Gender <chr>"},{"path":"online-science-class-data.html","id":"subtract-data","chapter":"2 Online Science Class Data","heading":"2.4.3.2 Subtract data","text":"now course_id student_id better variable names . inspecting resulting data see still another problem: whatever reason pre_survey _80624_1 student_id instead just five characters underscores (e.g., 80624). need extract respectively subtract five characters underscore (_) symbols.Student IDs character strings even consists numbers. ? doesn’t make sense use calculations. Quite contrary! error fatal consequences use number. prevent mistake measure precaution change data type character (factor).book goes direction: order match variable types converts character strings numbers. recommend reverse procedure: convert number type student_id course_data character type.extract five characters underscore going use function str_sub() form {stringr} package, another package {tidyverse}. syntax following one:str_sub(string, start = 1L, end = -1L)start gives position first character (defaults first), end gives position last (defaults last character). Negative values count backwards last character.","code":"\n# Re-create the variable \"student_id\" so that it excludes the extraneous characters\npre_survey <- pre_survey %>% \n  mutate(student_id = str_sub(student_id, start = 2, end = -3))\n\n# Save \"student_id\" as a character string so that it matches with `pre_survey` \ncourse_data <-  course_data |> \n  mutate(student_id = as.character(student_id))"},{"path":"online-science-class-data.html","id":"left_join","chapter":"2 Online Science Class Data","heading":"2.4.3.3 left_join()","text":"surprising result . course_data 29711 pre_survey 1102 observation. thought left join result maximal 29711 + 1102 = 30813 row.10000 row. case?think something just one unique identifier. code applies two keys column join datasets many duplicates key columns.check assumption difficult enormous datasets. need toy datasets check hunch.","code":"\ndat <-\n  left_join(course_data, pre_survey,\n            by = c(\"student_id\", \"course_id\"))\ndat\n#> # A tibble: 40,348 × 21\n#>    course_id     subject semester section student_id Gradebook_Item        \n#>    <chr>         <chr>   <chr>    <chr>   <chr>      <chr>                 \n#>  1 AnPhA-S116-01 AnPhA   S116     01      60186      POINTS EARNED & TOTAL…\n#>  2 AnPhA-S116-01 AnPhA   S116     01      60186      WORK ATTEMPTED        \n#>  3 AnPhA-S116-01 AnPhA   S116     01      60186      0.1: Message Your Ins…\n#>  4 AnPhA-S116-01 AnPhA   S116     01      60186      0.2: Intro Assignment…\n#>  5 AnPhA-S116-01 AnPhA   S116     01      60186      0.3: Intro Assignment…\n#>  6 AnPhA-S116-01 AnPhA   S116     01      60186      1.1: Quiz             \n#>  7 AnPhA-S116-01 AnPhA   S116     01      60186      1.2: Quiz             \n#>  8 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#>  9 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#> 10 AnPhA-S116-01 AnPhA   S116     01      60186      1.4: Negative Feedbac…\n#> # … with 40,338 more rows, and 15 more variables: Grade_Category <chr>,\n#> #   FinalGradeCEMS <dbl>, Points_Possible <dbl>, Points_Earned <dbl>,\n#> #   Gender <chr>, q1 <dbl>, q2 <dbl>, q3 <dbl>, q4 <dbl>, q5 <dbl>,\n#> #   q6 <dbl>, q7 <dbl>, q8 <dbl>, q9 <dbl>, q10 <dbl>\n# Dataset of students\ndf1 <- tibble(\n  subject = c(\"X\", \"X\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"c\", \"c\"),\n  student = c(1,2,3,4,5,6,1,2,3,4,5,7,1,8),\n  grade_SS = c(3,2,1,4,5,1,2,2,3,3,1,5,2,2)\n)\n\ndf2 <- tibble(\n  subject = c(\"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \"b\", \"c\", \"c\"),\n  student = c(3,4,5,6,3,4,5,6,1,2),\n  grade_WS = c(1,4,5,1,3,3,1,5,3,3)\n)\n\ndf_left <-\n  left_join(df1, df2,\n            by = c(\"subject\", \"student\"))\ndf_left\n#> # A tibble: 14 × 4\n#>    subject student grade_SS grade_WS\n#>    <chr>     <dbl>    <dbl>    <dbl>\n#>  1 X             1        3       NA\n#>  2 X             2        2       NA\n#>  3 a             3        1        1\n#>  4 a             4        4        4\n#>  5 a             5        5        5\n#>  6 a             6        1        1\n#>  7 b             1        2       NA\n#>  8 b             2        2       NA\n#>  9 b             3        3        3\n#> 10 b             4        3        3\n#> 11 b             5        1        1\n#> 12 b             7        5       NA\n#> 13 c             1        2        3\n#> 14 c             8        2       NA"},{"path":"online-science-class-data.html","id":"semi_join","chapter":"2 Online Science Class Data","heading":"2.4.3.4 semi_join()","text":"semi_join() joins retains matching rows “left” “right” data frame. useful interested keeping rows (cases/observations) able joined. semi_join() create duplicate rows left data frame, even finds multiple matches right data frame. also keep columns left data frame.example, following returns rows present course_data pre_survey:","code":"\ndat_semi <- \n  semi_join(course_data,\n            pre_survey,\n            by = c(\"student_id\", \"course_id\"))\n\ndat_semi\n#> # A tibble: 28,655 × 11\n#>    course_id     subject semester section student_id Gradebook_Item        \n#>    <chr>         <chr>   <chr>    <chr>   <chr>      <chr>                 \n#>  1 AnPhA-S116-01 AnPhA   S116     01      60186      POINTS EARNED & TOTAL…\n#>  2 AnPhA-S116-01 AnPhA   S116     01      60186      WORK ATTEMPTED        \n#>  3 AnPhA-S116-01 AnPhA   S116     01      60186      0.1: Message Your Ins…\n#>  4 AnPhA-S116-01 AnPhA   S116     01      60186      0.2: Intro Assignment…\n#>  5 AnPhA-S116-01 AnPhA   S116     01      60186      0.3: Intro Assignment…\n#>  6 AnPhA-S116-01 AnPhA   S116     01      60186      1.1: Quiz             \n#>  7 AnPhA-S116-01 AnPhA   S116     01      60186      1.2: Quiz             \n#>  8 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#>  9 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#> 10 AnPhA-S116-01 AnPhA   S116     01      60186      1.4: Negative Feedbac…\n#> # … with 28,645 more rows, and 5 more variables: Grade_Category <chr>,\n#> #   FinalGradeCEMS <dbl>, Points_Possible <dbl>, Points_Earned <dbl>,\n#> #   Gender <chr>\ndat_semi2 <- \n  semi_join(pre_survey,\n            course_data,\n            by = c(\"course_id\"))\n\ndat_semi2\n#> # A tibble: 1,072 × 12\n#>    student_id course_id        q1    q2    q3    q4    q5    q6    q7    q8\n#>    <chr>      <chr>         <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n#>  1 80624      FrScA-S116-01     4     4     4     5     5     4     5     5\n#>  2 80623      BioA-S116-01      4     4     3     4     4     4     4     3\n#>  3 82588      OcnA-S116-03     NA    NA    NA    NA    NA    NA    NA    NA\n#>  4 80623      AnPhA-S116-01     4     3     3     4     3     3     3     4\n#>  5 80624      AnPhA-S116-01    NA    NA    NA    NA    NA    NA    NA    NA\n#>  6 80624      AnPhA-S116-02     4     2     2     4     4     4     5     4\n#>  7 80624      AnPhA-T116-01    NA    NA    NA    NA    NA    NA    NA    NA\n#>  8 80624      BioA-S116-01      5     3     3     5     5     4     5     5\n#>  9 80624      BioA-T116-01     NA    NA    NA    NA    NA    NA    NA    NA\n#> 10 80624      PhysA-S116-01     4     4     3     4     4     4     4     4\n#> # … with 1,062 more rows, and 2 more variables: q9 <dbl>, q10 <dbl>"},{"path":"online-science-class-data.html","id":"anti-join","chapter":"2 Online Science Class Data","heading":"2.4.3.5 anti-join()","text":"anti_join() removes rows “left” data frame can joined “right” data frame.","code":"\ndat_anti <-\n  anti_join(course_data,\n            pre_survey,\n            by = c(\"student_id\", \"course_id\"))\n\ndat_anti\n#> # A tibble: 1,056 × 11\n#>    course_id     subject semester section student_id Gradebook_Item        \n#>    <chr>         <chr>   <chr>    <chr>   <chr>      <chr>                 \n#>  1 AnPhA-S116-01 AnPhA   S116     01      85865      POINTS EARNED & TOTAL…\n#>  2 AnPhA-S116-01 AnPhA   S116     01      85865      WORK ATTEMPTED        \n#>  3 AnPhA-S116-01 AnPhA   S116     01      85865      0.1: Message Your Ins…\n#>  4 AnPhA-S116-01 AnPhA   S116     01      85865      0.2: Intro Assignment…\n#>  5 AnPhA-S116-01 AnPhA   S116     01      85865      0.3: Intro Assignment…\n#>  6 AnPhA-S116-01 AnPhA   S116     01      85865      1.1: Quiz             \n#>  7 AnPhA-S116-01 AnPhA   S116     01      85865      1.2: Quiz             \n#>  8 AnPhA-S116-01 AnPhA   S116     01      85865      1.3: Create a Living …\n#>  9 AnPhA-S116-01 AnPhA   S116     01      85865      1.3: Create a Living …\n#> 10 AnPhA-S116-01 AnPhA   S116     01      85865      1.4: Negative Feedbac…\n#> # … with 1,046 more rows, and 5 more variables: Grade_Category <chr>,\n#> #   FinalGradeCEMS <dbl>, Points_Possible <dbl>, Points_Earned <dbl>,\n#> #   Gender <chr>"},{"path":"online-science-class-data.html","id":"right_join","chapter":"2 Online Science Class Data","heading":"2.4.3.6 right_join()","text":"Perhaps least helpful three, right_join(), works left_join(), retaining rows “right” data frame, joining matching rows “left” data frame (, opposite left_join()).wanted return exactly output left_join() (, , create data frame identical dat data frame created ), simply switch order two data frames opposite used left_join() :","code":"\ndat_right <-\n  right_join(course_data,\n             pre_survey,\n             by = c(\"student_id\", \"course_id\"))\n\ndat_right\n#> # A tibble: 39,593 × 21\n#>    course_id     subject semester section student_id Gradebook_Item        \n#>    <chr>         <chr>   <chr>    <chr>   <chr>      <chr>                 \n#>  1 AnPhA-S116-01 AnPhA   S116     01      60186      POINTS EARNED & TOTAL…\n#>  2 AnPhA-S116-01 AnPhA   S116     01      60186      WORK ATTEMPTED        \n#>  3 AnPhA-S116-01 AnPhA   S116     01      60186      0.1: Message Your Ins…\n#>  4 AnPhA-S116-01 AnPhA   S116     01      60186      0.2: Intro Assignment…\n#>  5 AnPhA-S116-01 AnPhA   S116     01      60186      0.3: Intro Assignment…\n#>  6 AnPhA-S116-01 AnPhA   S116     01      60186      1.1: Quiz             \n#>  7 AnPhA-S116-01 AnPhA   S116     01      60186      1.2: Quiz             \n#>  8 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#>  9 AnPhA-S116-01 AnPhA   S116     01      60186      1.3: Create a Living …\n#> 10 AnPhA-S116-01 AnPhA   S116     01      60186      1.4: Negative Feedbac…\n#> # … with 39,583 more rows, and 15 more variables: Grade_Category <chr>,\n#> #   FinalGradeCEMS <dbl>, Points_Possible <dbl>, Points_Earned <dbl>,\n#> #   Gender <chr>, q1 <dbl>, q2 <dbl>, q3 <dbl>, q4 <dbl>, q5 <dbl>,\n#> #   q6 <dbl>, q7 <dbl>, q8 <dbl>, q9 <dbl>, q10 <dbl>\ndat_right <-\n  right_join(pre_survey,\n            course_data,\n            by = c(\"student_id\", \"course_id\"))\n\ndat_right\n#> # A tibble: 40,348 × 21\n#>    student_id course_id        q1    q2    q3    q4    q5    q6    q7    q8\n#>    <chr>      <chr>         <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n#>  1 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  2 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  3 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  4 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  5 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  6 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  7 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  8 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#>  9 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#> 10 85791      FrScA-S116-01     3     3     3     3     4     3     3     3\n#> # … with 40,338 more rows, and 11 more variables: q9 <dbl>, q10 <dbl>,\n#> #   subject <chr>, semester <chr>, section <chr>, Gradebook_Item <chr>,\n#> #   Grade_Category <chr>, FinalGradeCEMS <dbl>, Points_Possible <dbl>,\n#> #   Points_Earned <dbl>, Gender <chr>"},{"path":"online-science-class-data.html","id":"join-course_minutes","chapter":"2 Online Science Class Data","heading":"2.4.3.7 Join course_minutes","text":"rename necessary variables dataset ready merge. , merge course_minutes dataset newly renamed variables student_id course_id dat dataset.40348 observations 22 variables. can also see several rows student (“60186”) course (“AnPhA-S116-01”), resulting final grade (FinalGradeCEMS) 86.272. (book figure rounded 86.3).","code":"\n# Log-trace data for F15 and S16 semesters - this is for time spent\ncourse_minutes <- dataedu::course_minutes\nglimpse(course_minutes)\n#> Rows: 598\n#> Columns: 3\n#> $ Bb_UserPK           <dbl> 44638, 54346, 57981, 66740, 67920, 85355, 856…\n#> $ CourseSectionOrigID <chr> \"OcnA-S116-01\", \"OcnA-S116-01\", \"OcnA-S116-01…\n#> $ TimeSpent           <dbl> 1382.7001, 1191.3836, 3343.3333, 965.2994, 40…\ncourse_minutes <-\n  course_minutes %>%\n  rename(student_id = Bb_UserPK,\n         course_id = CourseSectionOrigID)\n\n\n\n## I have set data type of student_id to character\n## So I do not change the double typeto integer  but to character!\n\ncourse_minutes <-\n  course_minutes %>%\n  # Change the data type for student_id in course_minutes so we can match to\n  # student_id in dat\n  mutate(student_id = as.character(student_id))\n\ndat <- \n  dat %>% \n  left_join(course_minutes, \n            by = c(\"student_id\", \"course_id\"))\n\nglimpse(dat)\n#> Rows: 40,348\n#> Columns: 22\n#> $ course_id       <chr> \"AnPhA-S116-01\", \"AnPhA-S116-01\", \"AnPhA-S116-01\"…\n#> $ subject         <chr> \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnP…\n#> $ semester        <chr> \"S116\", \"S116\", \"S116\", \"S116\", \"S116\", \"S116\", \"…\n#> $ section         <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"…\n#> $ student_id      <chr> \"60186\", \"60186\", \"60186\", \"60186\", \"60186\", \"601…\n#> $ Gradebook_Item  <chr> \"POINTS EARNED & TOTAL COURSE POINTS\", \"WORK ATTE…\n#> $ Grade_Category  <chr> NA, NA, NA, \"Hw\", \"Hw\", \"Qz\", \"Qz\", \"Hw\", \"Hw\", \"…\n#> $ FinalGradeCEMS  <dbl> 86.272, 86.272, 86.272, 86.272, 86.272, 86.272, 8…\n#> $ Points_Possible <dbl> 5, 30, 105, 140, 5, 5, 20, 50, 10, 50, 5, 5, 24, …\n#> $ Points_Earned   <dbl> 4.050, 24.000, 71.675, 140.970, 5.000, 4.000, NA,…\n#> $ Gender          <chr> \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\",…\n#> $ q1              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q2              <dbl> 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4…\n#> $ q3              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q4              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q5              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q6              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q7              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q8              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q9              <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ q10             <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n#> $ TimeSpent       <dbl> 2087.05, 2087.05, 2087.05, 2087.05, 2087.05, 2087…"},{"path":"online-science-class-data.html","id":"select-distinct-row","chapter":"2 Online Science Class Data","heading":"2.4.4 Select distinct row","text":"Since carrying finer-grained analysis using Gradebook_Item, duplicate rows necessary. want variables student level level different gradebook items. can extract unique student-level data using distinct() function. function takes arguments name data frame name variables used determine counts unique case.Running following code returns one-column data frame lists names every distinct gradebook item.might wondering whether gradebook items names across courses. can return unique combination courses gradebook items simply adding another variable distinct():data frame get run code chunk yields much longer (observations) dataset. Thus, looks like lot gradebook items repeated across courses — likely across different sections course.Next, let’s use similar process find unique values student level. Thus, instead exploring unique gradebook items, explore unique students (still accounting course, students enroll one course). time, add keep_all = TRUE argument.much smaller data frame—one row student course. Whereas prior version dat dataset 40,000 rows, prior version helpful wanted analysis level specific students’ grades specific gradebook items. new dataset keeps unique combinations student course, leaving us manageable number observations: 603. Now data ready go, can start ask questions .Let’s take one last step. Since using final grade variable many figures analyses follow, let’s rename using {dplyr} rename() function something bit easier type remember FinalGradeCEMS:","code":"\ndistinct(dat, Gradebook_Item)\n#> # A tibble: 222 × 1\n#>    Gradebook_Item                                  \n#>    <chr>                                           \n#>  1 POINTS EARNED & TOTAL COURSE POINTS             \n#>  2 WORK ATTEMPTED                                  \n#>  3 0.1: Message Your Instructor                    \n#>  4 0.2: Intro Assignment - Discussion Board        \n#>  5 0.3: Intro Assignment - Submitting Files        \n#>  6 1.1: Quiz                                       \n#>  7 1.2: Quiz                                       \n#>  8 1.3: Create a Living Creature                   \n#>  9 1.3: Create a Living Creature - Discussion Board\n#> 10 1.4: Negative Feedback Loop Flowchart           \n#> # … with 212 more rows\ndistinct(dat, course_id, Gradebook_Item)\n#> # A tibble: 1,269 × 2\n#>    course_id     Gradebook_Item                                  \n#>    <chr>         <chr>                                           \n#>  1 AnPhA-S116-01 POINTS EARNED & TOTAL COURSE POINTS             \n#>  2 AnPhA-S116-01 WORK ATTEMPTED                                  \n#>  3 AnPhA-S116-01 0.1: Message Your Instructor                    \n#>  4 AnPhA-S116-01 0.2: Intro Assignment - Discussion Board        \n#>  5 AnPhA-S116-01 0.3: Intro Assignment - Submitting Files        \n#>  6 AnPhA-S116-01 1.1: Quiz                                       \n#>  7 AnPhA-S116-01 1.2: Quiz                                       \n#>  8 AnPhA-S116-01 1.3: Create a Living Creature                   \n#>  9 AnPhA-S116-01 1.3: Create a Living Creature - Discussion Board\n#> 10 AnPhA-S116-01 1.4: Negative Feedback Loop Flowchart           \n#> # … with 1,259 more rows\ndat <-\n  distinct(dat, course_id, student_id, .keep_all = TRUE)\nglimpse(dat)\n#> Rows: 603\n#> Columns: 22\n#> $ course_id       <chr> \"AnPhA-S116-01\", \"AnPhA-S116-01\", \"AnPhA-S116-01\"…\n#> $ subject         <chr> \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnPhA\", \"AnP…\n#> $ semester        <chr> \"S116\", \"S116\", \"S116\", \"S116\", \"S116\", \"S116\", \"…\n#> $ section         <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"…\n#> $ student_id      <chr> \"60186\", \"66693\", \"66811\", \"66862\", \"67508\", \"705…\n#> $ Gradebook_Item  <chr> \"POINTS EARNED & TOTAL COURSE POINTS\", \"POINTS EA…\n#> $ Grade_Category  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n#> $ FinalGradeCEMS  <dbl> 86.27200, 93.75360, 91.20160, 59.81973, 83.81493,…\n#> $ Points_Possible <dbl> 5, 24, 10, 15, 5, 5, 24, 5, 30, 24, 460, 30, 10, …\n#> $ Points_Earned   <dbl> 4.05, 24.00, 10.00, 12.00, 5.00, 5.00, 10.00, 4.0…\n#> $ Gender          <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"F\", \"F\",…\n#> $ q1              <dbl> 5, 4, 4, 4, 4, 4, NA, 4, NA, 4, NA, 3, 3, 4, 4, 5…\n#> $ q2              <dbl> 4, 3, 3, 3, 3, 4, NA, 2, NA, 3, NA, 3, 2, 4, 4, 5…\n#> $ q3              <dbl> 5, 2, 2, 2, 3, 3, NA, 3, NA, 3, NA, 3, 3, 3, 3, 3…\n#> $ q4              <dbl> 5, 4, 4, 4, 4, 4, NA, 5, NA, 4, NA, 2, 4, 4, 5, 5…\n#> $ q5              <dbl> 5, 4, 3, 4, 4, 4, NA, 5, NA, 4, NA, 2, 4, 4, 4, 5…\n#> $ q6              <dbl> 5, 4, 5, 4, 4, 4, NA, 3, NA, 4, NA, 4, 4, 4, 4, 5…\n#> $ q7              <dbl> 5, 4, 3, 4, 4, 3, NA, 4, NA, 4, NA, 2, 3, 3, 4, 4…\n#> $ q8              <dbl> 5, 4, 4, 4, 4, 4, NA, 5, NA, 4, NA, 3, 3, 5, 4, 5…\n#> $ q9              <dbl> 5, 3, 4, 4, 3, 4, NA, 3, NA, 3, NA, 2, 4, 3, 4, 5…\n#> $ q10             <dbl> 5, 4, 4, 4, 3, 5, NA, 3, NA, 4, NA, 2, 3, 4, 4, 5…\n#> $ TimeSpent       <dbl> 2087.0501, 2309.0334, 5298.8507, 1746.9667, 2668.…\ndat <- rename(dat, final_grade = FinalGradeCEMS)"},{"path":"online-science-class-data.html","id":"analysis","chapter":"2 Online Science Class Data","heading":"2.5 Analysis","text":"","code":""},{"path":"online-science-class-data.html","id":"grades-and-time-spent","chapter":"2 Online Science Class Data","heading":"2.5.1 Grades and time spent","text":"","code":""},{"path":"online-science-class-data.html","id":"scatterplot","chapter":"2 Online Science Class Data","heading":"2.5.1.1 Scatterplot","text":"","code":"\ndat %>%\n  # aes() tells ggplot2 what variables to map to what feature of a plot\n  # Here we map variables to the x- and y-axis\n  ggplot(aes(x = TimeSpent, y = final_grade)) + \n  # Creates a point with x- and y-axis coordinates specified above\n  geom_point(color = dataedu_colors(\"green\")) + \n  theme_dataedu() +\n  labs(x = \"Time Spent\",\n       y = \"Final Grade\")\n#> Warning: Removed 30 rows containing missing values (geom_point)."},{"path":"online-science-class-data.html","id":"scatterplot-with-best-fit","chapter":"2 Online Science Class Data","heading":"2.5.1.2 Scatterplot with best fit","text":"Looking plot, appears time students spent course, higher final grade .line upper right part graph? Based upon trend observable data, line best fit predicts students spend particular amount time course earn greater 100 final grade! course, possible highlights importance understanding data carefully interpreting lines best fit (, sophisticated analyses) carefully, keeping understanding knowledge mind present make sense results.","code":"\ndat %>%\n  ggplot(aes(x = TimeSpent, y = final_grade)) +\n    geom_point(color = dataedu_colors(\"green\")) + # same as above\n  # this adds a line of best fit\n  # method = \"lm\" tells ggplot2 to fit the line using linear regression\n  geom_smooth(method = \"lm\") +\n  theme_dataedu() +\n  labs(x = \"Time Spent\",\n       y = \"Final Grade\")\n#> `geom_smooth()` using formula 'y ~ x'\n#> Warning: Removed 30 rows containing non-finite values (stat_smooth).\n#> Warning: Removed 30 rows containing missing values (geom_point)."},{"path":"online-science-class-data.html","id":"regression","chapter":"2 Online Science Class Data","heading":"2.5.1.3 Regression","text":"can find exactly relationship two variables using linear model. discuss linear models detail Chapter 10.Let’s use technique model relationship time spent course students’ final grades. , predict final_grade. student’s final, reported grade dependent, y-variable, enter first, lm() command tilde (~) symbol. right tilde one independent variable, TimeSpent, time students spent course. also pass, provide, data frame, dat. point, ’re ready run model. Let’s run line code save results object — chose m_linear, name work. run summary() function output.","code":"\nm_linear <-\n  lm(final_grade ~ TimeSpent, data = dat)\n\nsummary(m_linear)\n#> \n#> Call:\n#> lm(formula = final_grade ~ TimeSpent, data = dat)\n#> \n#> Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -67.136  -7.805   4.723  14.471  30.317 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) 6.581e+01  1.491e+00   44.13   <2e-16 ***\n#> TimeSpent   6.081e-03  6.482e-04    9.38   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 20.71 on 571 degrees of freedom\n#>   (30 observations deleted due to missingness)\n#> Multiple R-squared:  0.1335, Adjusted R-squared:  0.132 \n#> F-statistic: 87.99 on 1 and 571 DF,  p-value: < 2.2e-16"},{"path":"online-science-class-data.html","id":"print-regression-model-as-html-table","chapter":"2 Online Science Class Data","heading":"2.5.1.4 Print regression model as HTML table","text":"Another way can generate table output function {sjPlot} package, tab_model(). run code, see results pop “Viewer” pane RStudio.\nTable 7.1\nwork well R Markdown documents (simply interpret model R). want save model use Word document, {apaTables} (https://dstanley4.github.io/apaTables/articles/apaTables.html) package may helpful. save table Word format, just pass name regression model function apaTables package, like tab_model() function. , can save output Word document, simply adding filename argument:","code":"\ntab_model(m_linear,\n          title = \"Table 7.1\")\napa.reg.table(m_linear, filename = \"regression-table-output.doc\")\n#> \n#> \n#> Regression results using final_grade as the criterion\n#>  \n#> \n#>    Predictor       b       b_95%_CI beta  beta_95%_CI sr2 sr2_95%_CI     r\n#>  (Intercept) 65.81** [62.88, 68.74]                                       \n#>    TimeSpent  0.01**   [0.00, 0.01] 0.37 [0.29, 0.44] .13 [.09, .19] .37**\n#>                                                                           \n#>                                                                           \n#>                                                                           \n#>              Fit\n#>                 \n#>                 \n#>      R2 = .134**\n#>  95% CI[.09,.19]\n#>                 \n#> \n#> Note. A significant b-weight indicates the beta-weight and semi-partial correlation are also significant.\n#> b represents unstandardized regression weights. beta indicates the standardized regression weights. \n#> sr2 represents the semi-partial correlation squared. r represents the zero-order correlation.\n#> Square brackets are used to enclose the lower and upper limits of a confidence interval.\n#> * indicates p < .05. ** indicates p < .01.\n#> "},{"path":"online-science-class-data.html","id":"survey-responses","chapter":"2 Online Science Class Data","heading":"2.5.2 Survey responses","text":"Now ’ve prepared survey responses, can use apa.cor.table() function:","code":"\nsurvey_responses <-\n  pre_survey %>%\n  # Gather questions and responses\n  pivot_longer(cols = q1:q10,\n               names_to = \"question\",\n               values_to = \"response\") %>%\n  mutate(\n    # Here's where we make the column of question categories\n    measure = case_when(\n      question %in% c(\"q1\", \"q4\", \"q5\", \"q8\", \"q10\") ~ \"int\",\n      question %in% c(\"q2\", \"q6\", \"q9\") ~ \"uv\",\n      question %in% c(\"q3\", \"q7\") ~ \"pc\",\n      TRUE ~ NA_character_\n    )\n  ) %>%\n  group_by(student_id, measure) %>%\n  # Here's where we compute the mean of the responses\n  summarize(\n    # Mean response for each measure\n    mean_response = mean(response, na.rm = TRUE)\n    ) %>%\n    # Filter NA (missing) responses\n  filter(!is.na(mean_response)) %>%\n  pivot_wider(names_from = measure, \n              values_from = mean_response)\n#> `summarise()` has grouped output by 'student_id'. You can override using the `.groups` argument.\n\nsurvey_responses\n#> # A tibble: 517 × 4\n#> # Groups:   student_id [517]\n#>    student_id   int    pc    uv\n#>    <chr>      <dbl> <dbl> <dbl>\n#>  1 43146       5     4.5   4.33\n#>  2 44638       4.2   3.5   4   \n#>  3 47448       5     4     3.67\n#>  4 47979       5     3.5   5   \n#>  5 48797       3.8   3.5   3.5 \n#>  6 49147       4.25  3.73  3.71\n#>  7 51943       4.6   4     4   \n#>  8 52326       5     3.5   5   \n#>  9 52446       3     3     3.33\n#> 10 53248       4     3     3.33\n#> # … with 507 more rows\nsurvey_responses %>% \n  apa.cor.table()\n#> \n#> \n#> Means, standard deviations, and correlations with confidence intervals\n#>  \n#> \n#>   Variable M    SD   1          2         \n#>   1. int   4.22 0.59                      \n#>                                           \n#>   2. pc    3.60 0.63 .59**                \n#>                      [.53, .64]           \n#>                                           \n#>   3. uv    3.71 0.70 .57**      .50**     \n#>                      [.51, .62] [.43, .56]\n#>                                           \n#> \n#> Note. M and SD are used to represent mean and standard deviation, respectively.\n#> Values in square brackets indicate the 95% confidence interval.\n#> The confidence interval is a plausible range of population correlations \n#> that could have caused the sample correlation (Cumming, 2014).\n#>  * indicates p < .05. ** indicates p < .01.\n#> "},{"path":"online-science-class-data.html","id":"time-spent-in-hours","chapter":"2 Online Science Class Data","heading":"2.5.3 Time spent in hours","text":"time spent variable large scale (minutes); transformed represent number hours students spent course? Let’s use mutate() function used earlier. ’ll end variable name _hours, represent variable means.\nTable 7.2\nscale still seem quite right. standardized variable mean zero standard deviation one?\nTable 7.3\nlook output, seems make sense. However, different interpretation now time spent variable: every one standard deviation increase amount time spent course, students’ final grades increased 8.24, around eight percentage points.","code":"\n# creating a new variable for the amount of time spent in hours\ndat <- \n  dat %>% \n  mutate(TimeSpent_hours = TimeSpent / 60)\n\n# the same linear model as above, but with the TimeSpent variable in hours\nm_linear_1 <- \n  lm(final_grade ~ TimeSpent_hours, data = dat)\n\n# viewing the output of the linear model\ntab_model(m_linear_1,\n          title = \"Table 7.2\")\n# this is to standardize the TimeSpent variable to have a mean of 0 and a standard deviation of 1\ndat <- \n  dat %>% \n  mutate(TimeSpent_std = scale(TimeSpent))\n\n# the same linear model as above, but with the TimeSpent variable standardized\nm_linear_2 <- \n  lm(final_grade ~ TimeSpent_std, data = dat)\n\n# viewing the output of the linear model\ntab_model(m_linear_2,\n          title = \"Table 7.3\")"},{"path":"online-science-class-data.html","id":"linear-model-with-subject-added","chapter":"2 Online Science Class Data","heading":"2.5.4 Linear model with subject added","text":"Let’s extend regression model consider following final model sequence: variables may matter? Perhaps differences based subject course. can add subject variable easily, follows:\nTable 7.4\nlooks like subjects FrSc — forensic science — PhysA — Physics — associated higher final grade. indicates students two classes earned higher grades students science classes dataset.","code":"\n# a linear model with the subject added \n# independent variables, such as TimeSpent_std and subject, can simply be separated with a plus symbol:\nm_linear_3 <- \n  lm(final_grade ~ TimeSpent_std + subject, data = dat)\n\ntab_model(m_linear_3,\n          title = \"Table 7.4\")"},{"path":"online-science-class-data.html","id":"conclusion","chapter":"2 Online Science Class Data","heading":"2.6 Conclusion","text":"walkthrough, focused taking unprocessed raw data loading, viewing, processing series steps. result dataset use create visualizations simple (powerful!) linear model, also known regression model. found time students spent course positively (statistically significantly) related students’ final grades, appeared differences subject. focused using model traditional, explanatory sense, also potentially used predictive analytics knowing long student spent course subject course used estimate student’s final grade might . focus uses predictive models Chapter 14.follow-walkthrough (see Chapter 13), focus visualizing modeling data using advanced methodological technique, multilevel models, using data prepared part data processing pipeline used chapter.","code":""},{"path":"classroom-gradebook.html","id":"classroom-gradebook","chapter":"3 Classroom Gradebook","heading":"3 Classroom Gradebook","text":"","code":""},{"path":"classroom-gradebook.html","id":"introduction-2","chapter":"3 Classroom Gradebook","heading":"3.1 Introduction","text":"Notes chapter references chapter 8 (Walkthrough\n2: Approaching Gradebook\nData Data Science Perspective) Data Science Education\nUsing R.analysis centers around common K-12 classroom tool: gradebook.\nkind data individual student level chapter\nuses simulated dataset. Data source Excel file named\nExcelGradeBook.xlsx generated Excel gradebook template,\nAssessment Types\nPoints.","code":"\n# Load libraries\nlibrary(tidyverse)\n#> ── Attaching packages ────────────────────────────────── tidyverse 1.3.1 ──\n#> ✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n#> ✓ tibble  3.1.6     ✓ dplyr   1.0.7\n#> ✓ tidyr   1.1.4     ✓ stringr 1.4.0\n#> ✓ readr   2.1.1     ✓ forcats 0.5.1\n#> ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ──\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\nlibrary(here)\n#> here() starts at /Users/petzi/Documents/Meine-Repos/ldsr\nlibrary(readxl)\nlibrary(janitor)\n#> \n#> Attaching package: 'janitor'\n#> The following objects are masked from 'package:stats':\n#> \n#>     chisq.test, fisher.test\nlibrary(dataedu)"},{"path":"classroom-gradebook.html","id":"transfer-file","chapter":"3 Classroom Gradebook","heading":"3.2 Transfer file","text":"steps import data book described differently IMHO\ncompletely. book assumes downloaded book\nrepository. focus just transfer file .transfer file computer two options:go manually location internet. file \navailable book\nrepository\ninside folder “gradebook” folder\n“data.” go repo page\n(https://github.com/data-edu/data-science--education/blob/master/data/gradebooks/ExcelGradeBook.xlsx)\nclick “Download” button save file hard\ndisc prepared RStudio project folder.— preferred solution — download file\ndirectly via R. case need solve general problem: \ncan make sure colleagues able use code?\ncomputers different file organisation, \nusing absolute file path work. Even relative path \ndependent folder going start \nprocedure.","code":""},{"path":"classroom-gradebook.html","id":"using-here","chapter":"3 Classroom Gradebook","heading":"3.2.1 Using here()","text":"Providing file locations loading saving files \nreproducibility perspective big challenge. also general\nproblem pays effort develop special package just \nsolve problem. general solution implemented \n{rprojroot} package. rprojroot helps\naccessing files relative project root stop working\ndirectory\ninsanity. Nut \nuse {} package, derived {rprojroot}\nmuch simpler use purpose.() function {} package uses reasonable\nheuristic locate file relative project root. means\nadd file path working directory.\ntwo modes :write one complete expression like\n(\"/path///project/root.txt\") oryou write every part separately like\n(\"\", \"path\", \"\", \"\", \"project\", \"root.txt\")prefer second option somewhat different layout, \ncan see clearly directory hierarchy:(\"\",        \"path\",        \"\",        \"\",              \"project\",        \"root.txt\"      )can transfer file computer need prepare \nplace like store file. recommend use \npath hierarchy book repository: Create folder\ngradebook inside folder data lives top level\nproject directory.create folders manually either level \noperation system via file pane RStudio. advantage \nlearn apply R commands procedure. \ndisadvantage code full reproducible. want\nsecure colleagues working exact environment\n, provide necessary code, commented . \ncommented ? Nobody wants program changes something \nprivate local hard disk without explicit permission owner.Now let’s apply () transfer file computer:First need prepare file path create folder\nstructure. need standard reference point, e.g.,\nperspective project directory using ()\nfunction.get download URL need right-click “Download” button\nlocation reported copy internet address \nclipboard. ease handling long string going \nstore variable name gradebook_url. use \ndownload.file(), part every R installation.download.file() several options, going use \ntwo mandatory parameters: URL get file \nlocal path store transferred file. use\nfile path () function.succeeded, see following text R chunk:trying URL ‘https://github.com/data-edu/data-science--\neducation/raw/master/data/gradebooks/ExcelGradeBook.xlsx’ Content\ntype ‘application/octet-stream’ length 116083 bytes (113 KB)\n================================================== downloaded 113\nKBTo secure always download file run\nprogram code recommend comment lines. — \nusing RMarkdown like — write option “eval=FALSE” \nchunk header. (reason see original\nmessage R chunk reproduce message\n.)","code":"\n## comment out the next line if you want create the folder structure programmatically\n# dir.create(here(\"data\", \"folder\"), recursive = TRUE)\n\n## store download link into a variable\ngradebook_url <- \n    \"https://github.com/data-edu/data-science-in-education/raw/master/data/gradebooks/ExcelGradeBook.xlsx\"\n\n## download and store the file\ndownload.file(gradebook_url, here(\"data\", \n                                  \"gradebooks\", \n                                  \"ExcelGradeBook.xlsx\"))"},{"path":"classroom-gradebook.html","id":"import-file-into-r","chapter":"3 Classroom Gradebook","heading":"3.2.2 Import file into R","text":"now Excel file ExcelGradeBook.xlsx local hard disk.\nnext step import R.recommended file format working dataset R .csv\n(comma-separated-value) format: files plain text \nproprietary format. import .csv tabular data (tsv =\ntabulator separated files, fwf = fixed-width files web log files) one\nuses {readr} package, part tidyverse.Nowadays {vroom} another implementation delimited\nfixed data R. Vroom 25 times\nfaster {readr}, almost parsing feature \n{readr} even new features well. today haven’t\nseen many real life application {vroom}: Either still \nearly consideration know keep using\n{readr}. One reason might speed advantages {vroom}\ncount big datasets. performance benchmark test \nexample done 1.55 GB dataset. Following assumption\n{readr} still predominant file package reading \ndelimited fixed data R.However, data won’t always come preferred .csv file format.\nwalkthrough imports Excel file file types, \n.xlsx .xls extensions, likely encountered \nK-12 education world.book code uses read_excel() function {readxl}\npackage read data locally stored file\n(ExcelGradeBook.xlsx). {readxl} part tidyverse \nsupplements {readr}, main tidyverse program data import. \nread_excel() functions determines format legacy .xls\nmodern xml-based .xlsx format. file extension \nknow ExcelGradeBook.xlsx .xlsx format, also use\nslightly faster read_xlsx().Use {readODS} package reading writing OpenDocument\nSpreedsheets (ODS files). ODS files derived Open Document\nFormat (ODF), OpenSource ISO-certifacted standard office\napplications.OpenSource software like LibreOffice\nuses standard. OpenSource alternative proprietary\nMicrosoft file format.","code":""},{"path":"classroom-gradebook.html","id":"inspect-file","chapter":"3 Classroom Gradebook","heading":"3.2.3 Inspect file","text":"One necessary step import procedure inspect file. \ninspection necessary know structure dataset. least\nthree possible ways :Using R code — book demonstrates — inspect file.Using appropriate software open file inspect .Using RStudio interactive dataset importing tools menu\n“File” -> “Import dataset” -> “Excel….”demonstrative purposes going apply three options.","code":""},{"path":"classroom-gradebook.html","id":"using-r-code","chapter":"3 Classroom Gradebook","heading":"3.2.3.1 Using R code","text":"use local file path () load “ExcelGradeBook.xlsx” R object ExcelGradeBook. book suggests make copy better name (gradebook), easier remember type. later work copy leave original backup anything goes wrong.","code":""},{"path":"classroom-gradebook.html","id":"standard-printing","chapter":"3 Classroom Gradebook","heading":"3.2.3.2 Standard printing","text":"display content gradebook inspect content.Oops! happened ? inspect content dataset\nlearn thatwe’ve got dataset 43 columns 63 rowswithout sensible columns names (R warned us created many columns automatically)25 students heading Assessment Typewith many NA rows beginning also end \ndataset.reason strange structure someone used first\n9 lines Excel file note grading system. \nimportant note may , runs counter R assumption \nfirst line row column names.","code":"\n# Use readxl package to read and import file and assign it a name\nExcelGradeBook <-\n  read_excel(\n    here(\"data\", \n         \"gradebooks\", \n         \"ExcelGradeBook.xlsx\")\n  )\n#> New names:\n#> * `` -> ...1\n#> * `` -> ...3\n#> * `` -> ...4\n#> * `` -> ...5\n#> * `` -> ...6\n#> * ...\n\n# Copy R object to have a working file and a backup\ngradebook <- ExcelGradeBook \ngradebook\n#> # A tibble: 43 × 63\n#>    ...1  `Assessment Type` ...3  ...4   ...5  ...6  ...7  ...8  ...9  ...10\n#>    <chr> <chr>             <chr> <chr>  <chr> <chr> <chr> <chr> <chr> <chr>\n#>  1 <NA>  Points            <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  2 <NA>  Point Multiplier  <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  3 <NA>  Date              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  4 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  5 A-    90                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  6 B-    80                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  7 C-    70                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  8 D-    60                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  9 F:    0                 <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 10 Class Name              Race  Gender Age   Repe… Fina… Abse… Late  Make…\n#> # … with 33 more rows, and 53 more variables: ...11 <chr>, ...12 <chr>,\n#> #   ...13 <chr>, ...14 <chr>, ...15 <chr>, ...16 <chr>, ...17 <chr>,\n#> #   ...18 <chr>, Classworks...19 <chr>, Homeworks...20 <chr>,\n#> #   Classworks...21 <chr>, Homeworks...22 <chr>, Classworks...23 <chr>,\n#> #   Classworks...24 <chr>, Classworks...25 <chr>, Classworks...26 <chr>,\n#> #   Homeworks...27 <chr>, Formative Assessments...28 <chr>,\n#> #   Projects...29 <chr>, Classworks...30 <chr>, Homeworks...31 <chr>, …"},{"path":"classroom-gradebook.html","id":"using-print","chapter":"3 Classroom Gradebook","heading":"3.2.3.3 Using print()","text":"Unfortunately standard printing procedure R tibble datasets\n(special sort data frames tidyverse) limits \npresentation exact 10 rows per page. Therefore especially\ndifficult see happened. better see whole\ndataset . done print() command stating explicitly many rows print.","code":"\n### print file with specifies row numbers: for instance\n## print(gradebook, n = 100)\n\n\n### or specify the number with the `nrow()` function\n## print(gradebook, n = nrow(gradebook))\n\n### the same code but with pipe operator\ngradebook %>% print(n = nrow(.)) \n#> # A tibble: 43 × 63\n#>    ...1  `Assessment Type` ...3  ...4   ...5  ...6  ...7  ...8  ...9  ...10\n#>    <chr> <chr>             <chr> <chr>  <chr> <chr> <chr> <chr> <chr> <chr>\n#>  1 <NA>  Points            <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  2 <NA>  Point Multiplier  <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  3 <NA>  Date              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  4 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  5 A-    90                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  6 B-    80                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  7 C-    70                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  8 D-    60                <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#>  9 F:    0                 <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 10 Class Name              Race  Gender Age   Repe… Fina… Abse… Late  Make…\n#> 11 1     Student 1         <NA>  <NA>   <NA>  <NA>  <NA>  1     0     <NA> \n#> 12 1     Student 2         <NA>  <NA>   <NA>  <NA>  <NA>  0     1     <NA> \n#> 13 1     Student 3         <NA>  <NA>   <NA>  <NA>  <NA>  2     0     <NA> \n#> 14 1     Student 4         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 15 1     Student 5         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 16 1     Student 6         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 17 1     Student 7         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 18 1     Student 8         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 19 1     Student 9         <NA>  <NA>   <NA>  <NA>  <NA>  0     0     <NA> \n#> 20 1     Student 10        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 21 1     Student 11        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 22 1     Student 12        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 23 1     Student 13        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 24 1     Student 14        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 25 1     Student 15        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 26 1     Student 16        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 27 1     Student 17        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 28 1     Student 18        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 29 1     Student 19        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 30 1     Student 20        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 31 1     Student 21        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 32 1     Student 22        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 33 1     Student 23        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 34 1     Student 24        <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 35 1     Student 25        <NA>  <NA>   <NA>  <NA>  <NA>  No m… No m… <NA> \n#> 36 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 37 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 38 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 39 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 40 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 41 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 42 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> 43 <NA>  <NA>              <NA>  <NA>   <NA>  <NA>  <NA>  <NA>  <NA>  <NA> \n#> # … with 53 more variables: ...11 <chr>, ...12 <chr>, ...13 <chr>,\n#> #   ...14 <chr>, ...15 <chr>, ...16 <chr>, ...17 <chr>, ...18 <chr>,\n#> #   Classworks...19 <chr>, Homeworks...20 <chr>, Classworks...21 <chr>,\n#> #   Homeworks...22 <chr>, Classworks...23 <chr>, Classworks...24 <chr>,\n#> #   Classworks...25 <chr>, Classworks...26 <chr>, Homeworks...27 <chr>,\n#> #   Formative Assessments...28 <chr>, Projects...29 <chr>,\n#> #   Classworks...30 <chr>, Homeworks...31 <chr>, Projects...32 <chr>, …"},{"path":"classroom-gradebook.html","id":"using-paged_table","chapter":"3 Classroom Gradebook","heading":"3.2.3.4 Using paged_table()","text":"Another option inspect whole dataset R :","code":"\ngradebook %>% rmarkdown::paged_table()"},{"path":"classroom-gradebook.html","id":"rstudio-file-viewer","chapter":"3 Classroom Gradebook","heading":"3.2.3.5 RStudio file viewer","text":"Finally also use RStudio intern file viewer console View(gradebook) programmatically view(gradebook). following screenshot display view via RStudio.display screenshot used chunk header together include_graphics() function {knitr} package.\nFigure 3.1: Screenshot dataset loaded View(ExcelGradeBook) RStudio\n","code":"```{r rstudio-screenshot-dataset, echo=FALSE, fig.cap='Screenshot of the dataset loaded with `View(ExcelGradeBook)` into RStudio', out.width='95%', fig.align='center', fig.alt='Screenshot of the dataset loaded with `View(ExcelGradeBook)` into RStudio showing that the dataset starts with line 10.', out.extra='class=\"shadow\"'}\nknitr::include_graphics(\"img/inspect-file-with-code-min.png\")\n```"},{"path":"classroom-gradebook.html","id":"rstudio-import-dataset","chapter":"3 Classroom Gradebook","heading":"3.2.3.6 RStudio import dataset","text":"Using RStudio interface interactively another practical way inspecting importing data. case need know exact syntax R code. also can see several datasheets can inspect content. RStudio importing dataset also write code lines used console. can copy use script.\nFigure 3.2: Screenshot interactive interface RStudio importing datasets.\n","code":""},{"path":"classroom-gradebook.html","id":"application-software","chapter":"3 Classroom Gradebook","heading":"3.2.3.7 Application software","text":"possibilities gives full information. empty (NA) rows end dataset? information get opening file appropriate software tool.\nFigure 3.3: Screenshot dataset loaded LibreOffice\nscreenshot shows datasheets well, just first one relevant us. also get explication many NA’s rows dataset: mentioned used publicly available gradebook template. happens templates additional information first datasheet use template.","code":""},{"path":"classroom-gradebook.html","id":"conclusion-1","chapter":"3 Classroom Gradebook","heading":"3.2.3.8 Conclusion","text":"gist extensive inspection:Skip first 10 linesRead 26 line R (25 student column headings)Use just first sheetIf appropriate software (know use ), inspect file first step. easiest way get full information file import.","code":"\n# Use readxl package to read and import file and assign it a name\nExcelGradeBook <-\n  read_xlsx(\n    here(\"data\", \n         \"gradebooks\", \n         \"ExcelGradeBook.xlsx\"),\n    sheet = 1,\n    skip = 10,\n    n_max = 26\n  )\n\n# Copy R object to have a working file and a backup\ngradebook <- ExcelGradeBook \ngradebook\n#> # A tibble: 25 × 63\n#>    Class Name   Race  Gender Age   `Repeated Grade… `Financial Stat… Absent\n#>    <dbl> <chr>  <lgl> <lgl>  <lgl> <lgl>            <lgl>            <chr> \n#>  1     1 Stude… NA    NA     NA    NA               NA               1     \n#>  2     1 Stude… NA    NA     NA    NA               NA               0     \n#>  3     1 Stude… NA    NA     NA    NA               NA               2     \n#>  4     1 Stude… NA    NA     NA    NA               NA               0     \n#>  5     1 Stude… NA    NA     NA    NA               NA               0     \n#>  6     1 Stude… NA    NA     NA    NA               NA               0     \n#>  7     1 Stude… NA    NA     NA    NA               NA               0     \n#>  8     1 Stude… NA    NA     NA    NA               NA               0     \n#>  9     1 Stude… NA    NA     NA    NA               NA               0     \n#> 10     1 Stude… NA    NA     NA    NA               NA               <NA>  \n#> # … with 15 more rows, and 55 more variables: Late <chr>,\n#> #   Make your own categories <lgl>, Running Average <dbl>,\n#> #   Letter Grade <chr>, Homeworks <dbl>, Classworks <dbl>,\n#> #   Formative Assessments <dbl>, Projects <dbl>,\n#> #   Summative Assessments <dbl>, Another Type 2 <lgl>, Classwork 1 <dbl>,\n#> #   Homework 1 <dbl>, Classwork 2 <dbl>, Homework 2 <chr>,\n#> #   Classwork 3 <chr>, Classwork 4 <dbl>, Classwork 5 <dbl>, …"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
